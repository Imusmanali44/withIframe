export const CloseSvg = () => {
  return (
    <svg id="close" viewBox="0 0 30 30" width="30" height="30">
      <line
        x1="7.03"
        y1="6.01"
        x2="22.91"
        y2="21.99"
        stroke="currentColor"
        strokeLinecap="round"
        strokeMiterlimit="10"
        strokeWidth="2"
      ></line>
      <line
        x1="23.03"
        y1="6.01"
        x2="6.91"
        y2="21.99"
        stroke="currentColor"
        strokeLinecap="round"
        strokeMiterlimit="10"
        strokeWidth="2"
      ></line>
    </svg>
  );
};

export const StepLeftSvg = () => {
  return (
    <svg id="step-left" viewBox="0 0 12 24" width="12" height="24">
      <path
        d="M11.1785 22.2908L11.51 21.9594C11.7297 21.7397 11.7297 21.3835 11.51 21.1638L2.34626 12.0001L11.51 2.83628C11.7297 2.61662 11.7297 2.26047 11.51 2.04077L11.1785 1.70936C10.9589 1.4897 10.6027 1.4897 10.3831 1.70936L0.49006 11.6023C0.270403 11.822 0.270403 12.1781 0.49006 12.3978L10.3831 22.2908C10.6027 22.5105 10.9589 22.5105 11.1785 22.2908Z"
        fill="currentColor"
      ></path>
    </svg>
  );
};

export const StepRightSvg = () => {
  return (
    <svg id="step-right" viewBox="0 0 12 24" width="12" height="24">
      <path
        d="M0.821513 1.70933L0.49006 2.04074C0.270403 2.2604 0.270403 2.61655 0.49006 2.83625L9.6538 12L0.49006 21.1638C0.270403 21.3835 0.270403 21.7396 0.49006 21.9593L0.821513 22.2907C1.04117 22.5104 1.39733 22.5104 1.61698 22.2907L11.51 12.3978C11.7297 12.1781 11.7297 11.822 11.51 11.6023L1.61698 1.70933C1.39733 1.48963 1.04117 1.48963 0.821513 1.70933Z"
        fill="currentColor"
      ></path>
    </svg>
  );
};

export const AddRemoveRingSvg = () => {
  return (
    <svg id="ring-add" viewBox="0 0 30 30" width="30" height="30">
      <path
        d="M9.44606 0C9.31354 0 9.18645 0.0520407 9.09275 0.144674L6.84434 2.36744C6.64922 2.56034 6.64922 2.87309 6.84434 3.06599L10.2404 6.4233C4.45774 7.20512 0 12.161 0 18.158C0 24.6982 5.30182 30.0001 11.8419 30.0001C12.7626 30.0001 13.6587 29.895 14.5189 29.6962C13.205 29.2948 12.0344 28.5654 11.1027 27.6032C6.21609 27.2261 2.36839 23.1414 2.36839 18.158C2.36839 12.9258 6.60984 8.68433 11.8419 8.68433C13.0882 8.68433 14.2783 8.925 15.3683 9.36239C15.6096 8.59507 15.9631 7.87751 16.4095 7.22892C15.4749 6.83787 14.4795 6.5632 13.4415 6.42303L16.8373 3.06599C17.0324 2.87309 17.0324 2.56034 16.8373 2.36744L14.5889 0.144674C14.4952 0.0520406 14.3681 0 14.2356 0H9.44606Z"
        fill="#909090"
      ></path>
      <path
        d="M26.2477 12.276C26.4313 12.276 26.5815 12.1258 26.5815 11.9423V11.6085C26.5815 11.425 26.4313 11.2748 26.2477 11.2748H23.5221V8.54916C23.5221 8.3656 23.3719 8.21542 23.1884 8.21542H22.8546C22.6711 8.21542 22.5209 8.3656 22.5209 8.54916V11.2748H19.7953C19.6117 11.2748 19.4615 11.425 19.4615 11.6085V11.9423C19.4615 12.1258 19.6117 12.276 19.7953 12.276H22.5209V15.0016C22.5209 15.1852 22.6711 15.3354 22.8546 15.3354H23.1884C23.3719 15.3354 23.5221 15.1852 23.5221 15.0016V12.276H26.2477Z"
        fill="#202020"
      ></path>
      <path
        d="M24.1181 18.5862C27.4069 18.0612 29.919 15.2125 29.919 11.7754C29.919 7.9651 26.8318 4.87793 23.0215 4.87793C19.2112 4.87793 16.124 7.9651 16.124 11.7754C16.124 12.5566 16.2538 13.3075 16.493 14.0075C16.6165 14.0019 16.7407 13.999 16.8656 13.999C17.061 13.999 17.2547 14.006 17.4466 14.0197C17.1677 13.3274 17.014 12.5702 17.014 11.7754C17.014 8.47407 19.6868 5.76793 23.0215 5.76793C26.3228 5.76793 29.029 8.4407 29.029 11.7754C29.029 14.8637 26.69 17.4312 23.6581 17.7496C23.8274 18.0182 23.9811 18.2975 24.1181 18.5862Z"
        fill="#202020"
      ></path>
      <path
        d="M13.64 22.525C13.4564 22.525 13.3062 22.3749 13.3062 22.1913V21.8575C13.3062 21.674 13.4564 21.5238 13.64 21.5238H20.0925C20.276 21.5238 20.4262 21.674 20.4262 21.8575V22.1913C20.4262 22.3749 20.276 22.525 20.0925 22.525H13.64ZM23.7637 22.0244C23.7637 25.8347 20.6765 28.9219 16.8662 28.9219C13.0559 28.9219 9.96875 25.8347 9.96875 22.0244C9.96875 18.2141 13.0559 15.127 16.8662 15.127C20.6765 15.127 23.7637 18.2141 23.7637 22.0244ZM22.8737 22.0244C22.8737 18.6897 20.1675 16.0169 16.8662 16.0169C13.5315 16.0169 10.8587 18.7231 10.8587 22.0244C10.8587 25.3591 13.5649 28.0319 16.8662 28.0319C20.2009 28.0319 22.8737 25.3258 22.8737 22.0244Z"
        fill="#202020"
      ></path>
    </svg>
  );
};

export const ArrowLeftSvg = () => {
  return (
    <svg id="arrow-full-left" viewBox="0 0 22 22" width="22" height="22">
      <title>arrow-full-left</title>
      <line
        x1="19"
        y1="11"
        x2="3"
        y2="11"
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeMiterlimit="10"
        strokeWidth="2"
      ></line>
      <polyline
        points="10 18 3 11 10 4"
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
      ></polyline>
    </svg>
  );
};

export const ArrowRightSvg = () => {
  return (
    <svg id="arrow-full-right" viewBox="0 0 22 22" width="22" height="22">
      <title>arrow-full-right</title>
      <line
        x1="3"
        y1="11"
        x2="19"
        y2="11"
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeMiterlimit="10"
        strokeWidth="2"
      ></line>
      <polyline
        points="12 4 19 11 12 18"
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
      ></polyline>
    </svg>
  );
};

export const EngagementRingSvg = () => {
  return (
    <svg id="ring-solitaire" viewBox="0 0 512 512" width="512" height="512">
      <g id="a" clipPath="url(#b)">
        <path
          d="M256,471.6A161.7,161.7,0,1,0,94.3,309.9,161.706,161.706,0,0,0,256,471.6Zm0,40.4c111.6,0,202.1-90.5,202.1-202.1S367.6,107.8,256,107.8,53.9,198.3,53.9,309.9,144.4,512,256,512Z"
          fill="#c5c5c5"
          fillRule="evenodd"
        ></path>
        <path
          d="M209.1,2.5a8.567,8.567,0,0,1,6-2.5h81.7a8.393,8.393,0,0,1,6,2.5l38.4,37.9a8.39,8.39,0,0,1,0,11.9l-70.4,69.5a8.567,8.567,0,0,1-6,2.5H247a8.393,8.393,0,0,1-6-2.5L170.6,52.3a8.39,8.39,0,0,1,0-11.9Z"
          fill="#c5c5c5"
        ></path>
      </g>
    </svg>
  );
};

export const AddEngagementRingSvg = () => {
  return (
    <svg id="ring-add-solitaire" viewBox="0 0 58 58" width="58" height="58">
      <g id="b" clipPath="url(#c)">
        <path
          d="M1.91,11.832a.124.124,0,0,1,.159-.11,9.9,9.9,0,0,0,5.439.092.125.125,0,0,1,.156.127c-.722,13.441,1.385,21.031,7.781,25.7a.123.123,0,0,1-.053.22C4.912,39.72.749,28.515,1.91,11.832Z"
          transform="translate(5.493 16.931)"
          fill="#b8b8b8"
        ></path>
        <path
          d="M15.978.622a.139.139,0,0,1,.032.255,17.5,17.5,0,0,0-3.44,2.442A24.581,24.581,0,0,0,9.63,6.748a.141.141,0,0,1-.214.019A9.031,9.031,0,0,0,5.651,4.46a.143.143,0,0,1-.062-.236C9.644-.008,12-.472,15.978.622Z"
          transform="translate(9.799 3.883)"
          fill="#b8b8b8"
        ></path>
        <path
          d="M.007,12.555A10.052,10.052,0,0,1,3.964,4.737,8.114,8.114,0,0,1,7.191,3.121a6.91,6.91,0,0,1,8.1,3.546,8.541,8.541,0,0,1,.833,2.817,8.172,8.172,0,0,1-.115,2.755,9.652,9.652,0,0,1-1.5,3.647,9.9,9.9,0,0,1-4.414,3.7,7.292,7.292,0,0,1-3.977.535A6.808,6.808,0,0,1,.6,15.764,7.292,7.292,0,0,1,.007,12.555Z"
          transform="translate(3.556 7.005)"
          fill="#b8b8b8"
        ></path>
        <path
          d="M-60.477,48.924a7.523,7.523,0,0,1-3.5-3.085.174.174,0,0,1,.078-.253c3.387-1.5,6.038-5.8,7.753-11.163a16.842,16.842,0,0,0,4.3,3.838c-2.075,5.074-4.981,9.064-8.488,10.667a.171.171,0,0,1-.07.015A.177.177,0,0,1-60.477,48.924Zm.872-45.872a.178.178,0,0,1-.032-.274A13.455,13.455,0,0,1-55.958.022a.174.174,0,0,1,.174,0c2.823,1.747,4.779,4.848,5.978,8.68a16.775,16.775,0,0,0-4.844,3.271C-55.5,7.9-57.122,4.63-59.605,3.052Z"
          transform="translate(82.985 5.228)"
          fill="url(#ring_add_solitaire_back)"
        ></path>
        <g
          transform="translate(25 14)"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
        >
          <circle cx="15.5" cy="15.5" r="15.5" stroke="none"></circle>
          <circle cx="15.5" cy="15.5" r="14.5" fill="none"></circle>
        </g>
        <path
          d="M40.5,23.547V35.488"
          fill="none"
          stroke="currentColor"
          strokeLinecap="round"
          strokeWidth="3"
        ></path>
        <path
          d="M40.5,23.547V35.488"
          transform="translate(70.017 -10.983) rotate(90)"
          fill="none"
          stroke="currentColor"
          strokeLinecap="round"
          strokeWidth="3"
        ></path>
      </g>
    </svg>
  );
};

export const MemoirRingSvg = () => {
  return (
    <svg id="ring-memoire" viewBox="0 0 512 512" width="512" height="512">
      <g clipPath="url(#clip0_2_43)">
        <path
          d="M446.831 246.266C444.893 247.506 442.648 248.185 440.348 248.226C437.645 248.227 435.009 247.384 432.809 245.814C425.271 240.612 416.753 234.431 408.234 228.023C405.136 225.495 403.115 221.884 402.58 217.922C401.374 208.8 400.394 199.076 399.49 189.125C399.237 187.149 399.402 185.141 399.973 183.232C400.544 181.324 401.51 179.556 402.807 178.044C403.836 176.945 405.064 176.049 406.425 175.405L390.067 159.047C390.061 159.444 389.898 159.824 389.614 160.102C388.367 162.021 386.639 163.581 384.603 164.626C382.566 165.67 380.292 166.164 378.005 166.057H376.573L369.035 165.304C361.496 164.55 354.636 163.796 347.55 162.891C343.508 162.363 339.831 160.281 337.298 157.087C332.097 150.227 326.744 142.764 319.96 133.039C318.587 131.235 317.711 129.102 317.42 126.853C317.129 124.604 317.433 122.319 318.301 120.224C318.609 119.645 318.962 119.09 319.357 118.566L297.194 112.384C297.393 114.635 297.084 116.903 296.289 119.018L295.234 122.26L292.068 123.616L284.982 126.481L261.01 136.959C259.553 137.566 257.989 137.874 256.411 137.864C254.416 137.85 252.443 137.44 250.607 136.658L227.992 126.481L220.906 123.616L217.589 122.109L216.684 118.264C216.101 116.44 215.871 114.521 216.006 112.61L193.39 118.264C194.216 119.354 194.9 120.545 195.426 121.807L197.838 126.029L194.974 130.024L189.546 137.562C184.797 144.045 180.123 150.378 175.6 156.785C174.219 158.651 172.425 160.173 170.359 161.233C168.293 162.292 166.011 162.859 163.689 162.891L141.074 165.078L132.933 165.907H128.937L126.224 162.891C124.813 161.645 123.66 160.134 122.831 158.444L105.795 175.857C107.942 177.016 109.692 178.792 110.821 180.955C111.95 183.118 112.405 185.57 112.127 187.994C111.298 197.116 110.318 207.895 108.81 218.902C107.931 223.056 105.506 226.721 102.025 229.154C96.07 233.677 89.2101 238.351 82.9532 242.798L80.3148 244.683L79.7117 245.135C77.4739 247.166 74.5903 248.341 71.5703 248.452C69.8156 248.45 68.0858 248.037 66.5196 247.246L65.1627 246.341C39.5322 314.187 55.8905 413.241 136.702 472.493C171.142 497.916 212.85 511.581 255.657 511.466L256.336 512.144C307.891 512.247 357.518 492.548 394.967 457.114C468.315 387.987 465.45 292.25 446.831 246.266ZM255.733 471.136H254.376C211.781 470.837 171.035 453.696 141.035 423.456C111.035 393.217 94.2199 352.335 94.2608 309.739C94.8073 267.097 111.985 226.354 142.133 196.192C172.281 166.03 213.016 148.833 255.657 148.267C297.868 149.179 338.043 166.588 367.574 196.763C397.104 226.939 413.641 267.48 413.641 309.701C413.641 351.922 397.104 392.464 367.574 422.639C338.043 452.815 297.868 470.223 255.657 471.136H255.733ZM343.404 152.413C344.664 153.935 346.431 154.952 348.38 155.278C357.802 156.484 367.376 157.388 377.402 158.444H378.005C383.131 158.444 385.544 154.75 382.679 149.398C381.548 147.17 380.072 145.135 378.307 143.367C367.474 132.528 353.982 124.729 339.183 120.752C337.214 120.236 335.187 119.982 333.152 119.998C332.023 119.92 330.889 119.92 329.76 119.998C328.799 120.016 327.864 120.313 327.068 120.851C326.272 121.39 325.649 122.147 325.274 123.032C324.899 123.918 324.789 124.892 324.956 125.839C325.123 126.785 325.561 127.663 326.217 128.366C331.795 136.658 337.298 144.875 343.404 152.413ZM412.682 221.615C420.673 227.646 428.814 233.451 437.031 239.18C437.928 239.841 439.007 240.209 440.122 240.235C441.132 240.206 442.11 239.874 442.93 239.283C443.75 238.691 444.373 237.868 444.72 236.918C445.183 235.448 445.487 233.931 445.625 232.395C445.452 230.318 445.15 228.253 444.72 226.214C440.65 211.199 432.693 197.522 421.653 186.562C419.869 184.801 417.806 183.349 415.546 182.265C414.377 181.666 413.09 181.332 411.777 181.285C408.536 181.285 406.953 183.773 406.953 187.994C407.807 197.493 408.837 206.991 410.043 216.489C410.275 218.461 411.212 220.281 412.682 221.615ZM253.773 129.195C254.656 129.572 255.602 129.776 256.562 129.798C257.11 129.904 257.673 129.904 258.221 129.798C268.623 125.35 278.951 120.752 288.977 116.304C289.002 115.953 289.002 115.6 288.977 115.249C289.547 113.427 289.405 111.457 288.58 109.737C287.754 108.016 286.307 106.672 284.529 105.977C282.098 104.918 279.575 104.085 276.991 103.489C270.402 101.875 263.647 101.04 256.864 101.001C252.8 100.978 248.742 101.28 244.727 101.906C239.374 102.834 234.104 104.195 228.972 105.977H228.293C227.348 106.355 226.49 106.92 225.769 107.639C225.049 108.357 224.481 109.214 224.101 110.158C223.721 111.102 223.535 112.113 223.556 113.131C223.577 114.148 223.804 115.151 224.222 116.078C233.796 120.827 243.671 125.35 253.773 129.195ZM69.9872 240.461C70.4978 240.738 71.0654 240.893 71.6457 240.914C73.3795 240.914 74.661 239.481 76.0179 238.501C83.5563 233.375 90.4916 228.249 97.5777 222.897C99.4091 221.663 100.744 219.82 101.347 217.695C102.704 207.594 103.684 197.342 104.588 187.542C104.761 186.303 104.439 185.047 103.691 184.045C102.943 183.043 101.83 182.376 100.593 182.19H98.6331C96.8276 182.431 95.1144 183.131 93.6577 184.225C78.3548 196.362 65.9165 212.72 65.9165 231.792V233.828C65.8323 235.217 66.1778 236.599 66.906 237.786C67.6343 238.973 68.71 239.907 69.9872 240.461ZM162.408 155.051C163.653 155.125 164.898 154.888 166.029 154.361C167.161 153.835 168.144 153.036 168.891 152.036C175.223 143.141 181.706 134.396 188.34 125.35C185.626 120.752 183.817 118.943 180.349 118.943C179.002 118.978 177.663 119.154 176.354 119.47C160.057 123.23 145.238 131.728 133.762 143.895C132.817 144.881 131.983 145.968 131.274 147.136C128.485 151.735 128.711 153.318 132.631 158.067L162.408 155.051Z"
          fill="#C5C5C5"
        ></path>
      </g>
    </svg>
  );
};

export const AddMemoirRingSvg = () => {
  return (
    <svg id="ring-add-memoire" viewBox="0 0 58 58" width="58" height="58">
      <path
        d="M22.4336 8.62281C22.3359 8.56316 22.3262 8.43392 22.4043 8.35439C23.8301 6.88304 24.6992 6.33626 26.0078 5.60058C26.0566 5.57076 26.125 5.57076 26.1738 5.60058C28.9375 7.34035 30.8613 10.4421 32.0332 14.2596C30.2656 15.0649 28.6543 16.1684 27.2871 17.5205C26.457 13.4643 24.8652 10.1936 22.4336 8.62281Z"
        fill="url(#paint0_linear_1_2)"
      ></path>
      <path
        d="M25.832 39.9286C24.1523 45.2772 21.5547 49.5819 18.2344 51.0731C18.1367 51.1129 18.0977 51.2322 18.1563 51.3216C19.1035 52.8526 19.9141 53.5386 21.584 54.4035C21.6328 54.4234 21.6816 54.4333 21.7305 54.4035C25.168 52.8129 28.0098 48.8263 30.0508 43.7661C28.4297 42.7421 27.0039 41.4398 25.832 39.9286Z"
        fill="url(#paint1_linear_1_2)"
      ></path>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M24.3086 4.76549C13.0293 9.76608 5.38281 44.3626 19.2695 54.4134C19.3769 54.493 19.3672 54.662 19.2402 54.7117C17.6191 55.2684 14.0547 55.3678 10.666 51.9082C6.14453 47.3053 6.05663 36.5386 6.14453 31.2398C6.23242 25.9409 8.19531 17.8684 10.666 13.355C13.1367 8.84152 16.5547 4.75555 19.6211 4.23859C22.0723 3.82105 23.7617 4.41754 24.3086 4.76549ZM14.5625 9.51754C14.0059 9.82573 13.6641 10.293 13.5273 10.9292C13.4785 11.1479 13.4785 11.3667 13.5371 11.5854C13.6543 12.1023 13.957 12.4702 14.4551 12.6392C14.709 12.7287 14.9824 12.7386 15.2461 12.669C15.6269 12.5795 15.9687 12.3807 16.2324 12.0924C16.418 11.9035 16.5547 11.6748 16.6523 11.4263C16.7109 11.2573 16.7695 11.0784 16.7695 10.8895C16.7695 10.6906 16.7695 10.4918 16.7012 10.3029C16.4668 9.59707 15.9102 9.28888 15.2559 9.31871C15.0117 9.31871 14.7773 9.39824 14.5625 9.51754ZM11.1445 15.4029C11.2227 14.7667 11.5254 14.2696 12.0527 13.9117C12.248 13.7725 12.4727 13.683 12.7168 13.6433C13.3711 13.5538 13.9473 13.8123 14.25 14.4982C14.3281 14.6772 14.3477 14.876 14.3672 15.0748C14.3769 15.2637 14.3477 15.4526 14.2988 15.6216C14.2305 15.8801 14.1035 16.1187 13.9375 16.3275C13.7031 16.6357 13.3711 16.8643 13.0098 16.9936C12.7559 17.083 12.4824 17.093 12.2187 17.0333C11.7012 16.9041 11.3691 16.576 11.2129 16.069C11.1348 15.8503 11.1152 15.6216 11.1445 15.4029ZM9.44531 20.0655C9.4746 19.4193 9.72851 18.9023 10.2266 18.4947C10.4121 18.3357 10.6269 18.2263 10.8613 18.1667C11.5059 18.0175 12.1016 18.2263 12.4531 18.8825C12.5508 19.0515 12.5898 19.2503 12.6191 19.4491C12.6484 19.638 12.6289 19.8269 12.5996 20.0058C12.5508 20.2643 12.4531 20.5129 12.3066 20.7415C12.0918 21.0696 11.7891 21.3281 11.4375 21.4871C11.1934 21.5965 10.9199 21.6363 10.6562 21.5965C10.1387 21.517 9.77734 21.2088 9.57226 20.7216C9.4746 20.5029 9.43554 20.2842 9.44531 20.0655ZM8.31249 24.8573C8.23437 24.221 8.39062 23.6544 8.81054 23.1772C8.96679 22.9883 9.1621 22.8392 9.37695 22.7497C9.98242 22.4912 10.6074 22.5906 11.0664 23.1672C11.1836 23.3164 11.2617 23.5053 11.3203 23.6941C11.3789 23.8731 11.3887 24.062 11.3887 24.2409C11.3887 24.5094 11.3301 24.7678 11.2227 25.0164C11.0664 25.3743 10.8125 25.6825 10.4902 25.9012C10.2656 26.0503 10.0019 26.1398 9.73828 26.1497C9.21093 26.1596 8.80078 25.931 8.51757 25.4836C8.41992 25.2848 8.34179 25.076 8.31249 24.8573ZM7.6289 29.5398C7.55078 28.9035 7.70703 28.3468 8.12695 27.8596C8.2832 27.6708 8.47851 27.5216 8.69335 27.4322C9.29882 27.1737 9.92382 27.2731 10.3828 27.8497C10.5 27.9988 10.5781 28.1877 10.6367 28.3766C10.6953 28.5556 10.7051 28.7444 10.7051 28.9234C10.7051 29.1918 10.6465 29.4503 10.5391 29.6988C10.3828 30.0567 10.1289 30.3649 9.80663 30.5836C9.58203 30.7327 9.31835 30.8222 9.05468 30.8322C8.52734 30.8421 8.11718 30.6134 7.83398 30.1661C7.73632 29.9672 7.6582 29.7585 7.6289 29.5398ZM7.39453 34.4906C7.20898 33.8743 7.26757 33.2977 7.5996 32.7409C7.71679 32.5322 7.89257 32.3532 8.08788 32.214C8.64453 31.8462 9.26953 31.8363 9.82617 32.3234C9.97265 32.4526 10.0703 32.6216 10.168 32.8006C10.2559 32.9696 10.3047 33.1485 10.334 33.3275C10.373 33.586 10.3633 33.8643 10.3047 34.1228C10.2168 34.5105 10.0215 34.8585 9.73828 35.1269C9.54296 35.3158 9.29882 35.445 9.03515 35.5047C8.51757 35.614 8.07812 35.455 7.71679 35.0573C7.57031 34.8982 7.46288 34.7094 7.39453 34.4906ZM7.71679 39.4216C7.42382 38.855 7.38476 38.2684 7.61913 37.662C7.70703 37.4333 7.83398 37.2246 8.00976 37.0556C8.49804 36.5982 9.11328 36.469 9.73828 36.8567C9.90429 36.9561 10.0312 37.1053 10.1582 37.2643C10.2754 37.4134 10.3535 37.5825 10.4121 37.7515C10.5 38 10.5391 38.2684 10.5195 38.5368C10.5 38.9345 10.3633 39.3123 10.1289 39.6205C9.97265 39.8392 9.74804 40.0082 9.5039 40.1076C9.01562 40.3064 8.54687 40.2269 8.13671 39.8988C7.95117 39.7895 7.81445 39.6205 7.71679 39.4216ZM8.39062 44.114C8.09765 43.5474 8.05859 42.9608 8.29296 42.3544C8.38085 42.1257 8.50781 41.917 8.68359 41.748C9.17187 41.2906 9.7871 41.1614 10.4121 41.5491C10.5781 41.6485 10.7051 41.7977 10.832 41.9567C10.9492 42.1058 11.0273 42.2749 11.0859 42.4439C11.1738 42.6924 11.2129 42.9608 11.1934 43.2292C11.1738 43.6269 11.0371 44.0047 10.8027 44.3129C10.6465 44.5316 10.4219 44.7006 10.1777 44.8C9.68945 44.9988 9.2207 44.9193 8.81054 44.5912C8.63476 44.4819 8.49804 44.3129 8.39062 44.114ZM9.66015 47.5737C9.64062 48.2199 9.87499 48.7567 10.3437 49.1941C10.5 49.3433 10.6953 49.4526 10.9004 49.5123C11.3984 49.6713 11.8574 49.5819 12.2578 49.224C12.4629 49.045 12.6094 48.8064 12.6777 48.5479C12.7949 48.1702 12.7949 47.7725 12.6777 47.3947C12.6094 47.1363 12.4824 46.8977 12.3164 46.6889C12.1992 46.5497 12.0723 46.4105 11.916 46.3111C11.75 46.2117 11.5742 46.1123 11.3887 46.0725C10.666 45.9234 10.1289 46.2614 9.82617 46.8579C9.71874 47.0865 9.66015 47.3251 9.66015 47.5737Z"
        fill="#B8B8B8"
      ></path>
      <path
        d="M40.5 44C48.5081 44 55 37.5081 55 29.5C55 21.4919 48.5081 15 40.5 15C32.4919 15 26 21.4919 26 29.5C26 37.5081 32.4919 44 40.5 44Z"
        stroke="currentColor"
        fill="none"
        strokeWidth="2"
      ></path>
      <path
        d="M40.5 23.547V35.488"
        stroke="currentColor"
        strokeWidth="3"
        strokeLinecap="round"
      ></path>
      <path
        d="M46.47 29.517H34.529"
        stroke="currentColor"
        strokeWidth="3"
        strokeLinecap="round"
      ></path>
    </svg>
  );
};

export const TrashSvg = () => {
  return (
    <svg id="trash-2" viewBox="0 0 22 22" width="22" height="22">
      <title>trash-2</title>
      <g fill="#205fa8">
        <path d="M18,6V7H4V6H18m.5-2H3.5A1.5,1.5,0,0,0,2,5.5v2A1.5,1.5,0,0,0,3.5,9h15A1.5,1.5,0,0,0,20,7.5v-2A1.5,1.5,0,0,0,18.5,4Z"></path>
        <path d="M13,3V4H9V3h4m.5-2h-5A1.5,1.5,0,0,0,7,2.5V6h8V2.5A1.5,1.5,0,0,0,13.5,1Z"></path>
        <path d="M16,9v8H6V9H16m2-2H4V17a2,2,0,0,0,2,2H16a2,2,0,0,0,2-2V7Z"></path>
        <path d="M8,11v0m1-1H7v6H9V10Z"></path>
        <path d="M11,11v0m1-1H10v6h2V10Z"></path>
        <path d="M14,11v0m1-1H13v6h2V10Z"></path>
      </g>
    </svg>
  );
};

export const WeddingRingSVg = () => {
  return (
    <svg id="ring-profile" viewBox="0 0 512 512" width="512" height="512">
      <g id="a" clipPath="url(#b)">
        <path
          d="M256,471.6A161.7,161.7,0,1,0,94.3,309.9,161.706,161.706,0,0,0,256,471.6Zm0,40.4c111.6,0,202.1-90.5,202.1-202.1S367.6,107.8,256,107.8,53.9,198.3,53.9,309.9,144.4,512,256,512Z"
          fill="#c5c5c5"
          fillRule="evenodd"
        ></path>
      </g>
    </svg>
  );
};

export const AddWeddingRingSvg = () => {
  return (
    <svg id="ring-add-profile" viewBox="0 0 58 58" width="58" height="58">
      <g id="b" clipPath="url(#c)">
        <path
          d="M10.4,48.876C-5.541,43.558,0,3.81,13.022.675c3.5-.937,5.868-.639,10.553.2a.2.2,0,0,1,.028.368C11.543,5.762,6.5,42.929,21.077,48.812a.183.183,0,0,1-.027.348A22.827,22.827,0,0,1,10.4,48.876Z"
          transform="translate(1.359 3.405)"
          fill="#b8b8b8"
        ></path>
        <path
          d="M6.3,46.709a2.153,2.153,0,0,1-.875-.194,11.609,11.609,0,0,1-5.31-4.632.676.676,0,0,1,.038-.815A29.593,29.593,0,0,0,5.828,27.756a17.4,17.4,0,0,0,7.284,11.022c-1.693,3.989-3.783,6.672-6.043,7.76A1.751,1.751,0,0,1,6.3,46.709Zm.14-28.076h0A32.5,32.5,0,0,0,3.049,5.161a.676.676,0,0,1,.021-.668A9.609,9.609,0,0,1,8.3.045.649.649,0,0,1,8.535,0a.635.635,0,0,1,.353.106c2.667,1.77,4.688,4.7,6.007,8.71A17.451,17.451,0,0,0,6.443,18.633Z"
          transform="translate(17.506 5.167)"
          fill="url(#ring_add_profile_back)"
        ></path>
        <g
          transform="translate(25 14)"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
        >
          <circle cx="15.5" cy="15.5" r="15.5" stroke="none"></circle>
          <circle cx="15.5" cy="15.5" r="14.5" fill="none"></circle>
        </g>
        <path
          d="M40.5,23.547V35.488"
          fill="none"
          stroke="currentColor"
          strokeLinecap="round"
          strokeWidth="3"
        ></path>
        <path
          d="M40.5,23.547V35.488"
          transform="translate(70.017 -10.983) rotate(90)"
          fill="none"
          stroke="currentColor"
          strokeLinecap="round"
          strokeWidth="3"
        ></path>
      </g>
    </svg>
  );
};

export const SelectWeddingRingSvg = ({ className }) => {
  return (
    <svg
      id="ring-mode-profile-active"
      viewBox="0 0 22 33"
      width="19"
      height="30"
      className={`mx-auto ${className}`}
    >
      <g id="b">
        <path
          d="M6.946,31.595C-3.351,28.161.229,2.495,8.635.47,10.9-.135,12.424.058,15.45.6a.126.126,0,0,1,.018.238C7.681,3.755,4.424,27.755,13.837,31.553a.118.118,0,0,1-.017.224A14.74,14.74,0,0,1,6.946,31.595Z"
          transform="translate(-0.641 -0.096)"
          fill="currentColor"
        ></path>
        <path
          d="M14.158,31.208a1.254,1.254,0,0,0,1.06.015C21.473,28.212,24.6,6.688,16.393,1.24a.416.416,0,0,0-.381-.04,6.182,6.182,0,0,0-3.376,2.872.435.435,0,0,0-.013.432c3.642,6.954,2.645,17.621-1.869,23.185a.44.44,0,0,0-.025.527A7.534,7.534,0,0,0,14.158,31.208Z"
          transform="translate(-0.641 -0.096)"
          fill="currentColor"
        ></path>
        <path
          d="M14.158,31.208a1.254,1.254,0,0,0,1.06.015C21.473,28.212,24.6,6.688,16.393,1.24a.416.416,0,0,0-.381-.04,6.182,6.182,0,0,0-3.376,2.872.435.435,0,0,0-.013.432c3.642,6.954,2.645,17.621-1.869,23.185a.44.44,0,0,0-.025.527A7.534,7.534,0,0,0,14.158,31.208Z"
          transform="translate(-0.641 -0.096)"
          fill="url(#profile-gradient)"
        ></path>
      </g>
    </svg>
  );
};

export const ConnectRingSvg = ({ className }) => {
  return (
    <svg
      id="connect"
      className="mx-auto"
      viewBox="0 0 24 24"
      width="24"
      height="24"
    >
      <path
        d="M8.33,18.36A5.17,5.17,0,1,1,9.28,8.28a5.1,5.1,0,0,1,3.43,6.43,1.37,1.37,0,0,0,.43,1.66c.23.2.48.38.79.62a7.23,7.23,0,1,0-11,1.62c2.29,2.09,6.47,2.53,8.13.92l-1.3-1.42C9.23,18.2,8.78,18.31,8.33,18.36ZM21.18,7.94c-2.28-2.16-6.45-2.64-8.24-1l1.33,1.41c.43-.09.81-.19,1.19-.24a5.17,5.17,0,1,1-2.21,9.33,5,5,0,0,1-1.94-5.67,1.43,1.43,0,0,0-.5-1.74c-.2-.18-.44-.33-.72-.55a7.17,7.17,0,0,0,2,9.65A7.25,7.25,0,0,0,21.18,7.94Z"
        fill={className}
        transform="translate(0, -1)"
      ></path>
    </svg>
  );
};
